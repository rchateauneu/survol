Various notes about installation.

NECESSARY MODULES:
==================

TODO: Change the code to avoid Python modules six, rdflib, and psutil
which are not available on OVH (Mutualised hosting)
rdflib must be optional only.

SOME MANDATORY PYTHON LIBRARIES:

For the right Python version.

(OK) install pyparsing https://pypi.python.org/pypi/pyparsing/2.0.3#downloads
Install the Zip, it is probably easier.
python setup.py install

(OK) Install isodate
python setup.py install

(OK) Install rdflib  https://pypi.python.org/pypi/rdflib
python setup.py install


D:\Projects\Divers\Reverse\PythonStyle\htbin\revlib

(??) Install psutil
https://pypi.python.org/pypi/psutil

========================================================================================================================
CREATION OF A SOURCE DISTRIBUTION, UPLOAD ON PYPI:
This command creates a sdist which can be later uploaded on pypi.
python setup.py sdist

See also https://packaging.python.org/guides/migrating-to-pypi-org/#uploading ,
because there are many recent changes in the way modules are uplodaded,
basically the default URL is different so we use the legacy API.
Local file in C:\Users\rchateau: %USERPROFILE%\.pypirc
----------------------------------------------------------------------
[distutils]
index-servers=
  pypi
  pypitest

[pypi]
## repository=https://pypi.python.org/pypi
repository=https://upload.pypi.org/legacy/
username=rchateauneu
password=*********

[pypitest]
repository=https://test.pypi.org/legacy/
username=rchateauneu
password=*********
----------------------------------------------------------------------

# When uploading, the version must be changed in setup.py. pypi does not accept to load twice the same version.
# Command to upload on Pypi test:
python setup.py sdist upload -r pypitest

# Result can be checked at https://testpypi.python.org/pypi/survol/1.0.dev1


# Command to upload on Pypi:
python setup.py sdist upload -r pypi

# Result at:
https://pypi.python.org/pypi/survol/1.0.dev1

# Install into virtualenv:
(testarea) ...\testarea>pip uninstall survol
(testarea) ...\testarea>pip install -i https://testpypi.python.org/pypi survol
========================================================================================================================
Optional: Install win32

Problem when importing win32api.dll

win32 Python library not installed:DLL load failed: The specified module could not be found.

http://stackoverflow.com/questions/22490233/win32com-import-error-python-3-4

python C:\Python34\Scripts\pywin32_postinstall.py -install
========================================================================================================================
Optional: Install wmi
https://pypi.python.org/pypi/WMI

========================================================================================================================

AS A SCRIPT:
============

Installaing Apache is not necessary.
Its is enough to run survol with the stand-alone script cgiserver.py :

APACHE:
=======

Mandatory header for all scripts:
---------------------------------

On Linux, the Shebang is necessary to run CGI scripts.

#!C:\Python\3.2.3-0.2\python.exe -u
#!/usr/bin/python
Attention au coding:
  #!/usr/bin/python
          # -*- coding: latin-1 -*-
          import os, sys
          ...
          #!/usr/bin/python
          # -*- coding: iso-8859-15 -*-
          import os, sys
          ...
          #!/usr/bin/python
          # -*- coding: ascii -*-
          import os, sys

========================================================================================================================
Service Location Protocol

Survol uses OpenSlp as an implementation of Service Location Protocol.

It can be downloaded from http://www.openslp.org/

It might be helpful to pre-register some services in the file slp.reg.

This is the right place to also register manually, WBEM services.

This can be done this way:

#
service:wbem:http://rchateau-hp,en,65535 
description=OpenPegasus under Windows 7

# Definitions must be separated by an empty line.
service:survol:http://rchateau-hp:8000/survol/entity.py,en,65535
description=Survol Windows 7
#


========================================================================================================================
Configuring Apache for CGI scripts:


The HTTP Server Apache must be able to run all Python scripts residing
under the directory survol/sources_types as CGI scripts.

On Windows, it is necessary to specify to Apache which Python interpreter must be used
to run the CGI scripts. On Windows, this is done in the registry, with various keys depending 
on the Windows operating system version.

Windows7 
HKEY_CLASSES_ROOT\.py\Shell\ExecCGI\Command : The key "Default" contains the program name.
C:\Program Files (x86)\Python32\pythonw.exe -u

"C:\Python\3.2.3-0.2\pythonw.exe"

With Windows XP, the command is the key itself.
"C:\Python\3.2.3-0.3\pythonw.exe -u"

On Linux, all CGI scripts must be executable and the first line specifies the Pyton interpreter.
http://stackoverflow.com/questions/2036577/how-do-i-ignore-the-perl-shebang-on-windows-with-apache-2


========================================================================================================================

Installation Apache Windows 7:
==============================

AddHandler cgi-script .py

Alias /PythonStyle/ "D:/Projects/Divers/Reverse/PythonStyle/"

<Directory "D:\Projects\Divers\Reverse\PythonStyle\htbin">
    AllowOverride None
    Options Indexes FollowSymLinks +ExecCGI IncludesNoExec
	# http://stackoverflow.com/questions/2036577/how-do-i-ignore-the-perl-shebang-on-windows-with-apache-2
	# So the shebang line is not taken into account at all.
	ScriptInterpreterSource Registry-Strict
	# ScriptInterpreterSource Registry
	PassEnv PYTHONPATH
	SetEnv PYTHONUNBUFFERED 1
	# Tried this otherwise error when importing module cx_Oracle ... but this does not work.
	# PassEnv ORAC_HOME
	# SetEnv ORAC_HOME "D:/Projects/OracleBinTmp/CLNT0010203NEN005"
    AddOutputFilter Includes html
    AddHandler type-map var
    Order allow,deny
    Allow from all
    LanguagePriority en cs de es fr it ja ko nl pl pt-br ro sv tr
    ForceLanguagePriority Prefer Fallback
</Directory>

Cross Requests : So it is possible to haver a static html page which loads
RDF urls from distant sites.
# Ok on Linux.
Header set Access-Control-Allow-Origin "*"

# On Windows: Ensure this:
LoadModule headers_module modules/mod_headers.so
...
<IfModule mod_headers.c>
    Header set Access-Control-Allow-Origin: *
</IfModule>

Create Survol.conf file
Must create a specific conf file pour Apache.

========================================================================================================================
PYTHONPATH
;C:\Python\3.2.3-0.2;C:\Python\3.2.3-0.2\Lib\site-packages

This is not enough:

# To set pythonpath in httpd.conf
# Or globally:
# SetEnv PYTHONPATH "C:\Documents and Settings\Remi\My Documents\Reverse\PythonStyle\htbin\revlib"

========================================================================================================================

Apache needs to have its CGI scripts in a special directory.
At the same time, we meed to install Survol code as easily as possible,
independantly from Apache which might no be the unique HTTP server we are using.

Therefore, we are using symbolic links: Apache 

Synthetically, what the installation must do is:
- Copy the content of survol/*, survol/sources_types etc... at a place accessible from Apache.
- The css files must be accessible, from Python scripts.


https://docs.python.org/2.7/distutils/setupscript.html#installing-additional-files

========================================================================================================================
Installation with setup.py:

Test with virtual env:

cd testarea:
scripts/activate

pip install survol-1.0.dev0.zip --upgrade

# Creation of the package:
# python setup.py sdist
#
# Installation:
# scripts\activate
# pip install ..\dist\survol-1.0.dev0.zip --upgrade --install-option="--port 12345"
#
========================================================================================================================
How to start our CGI server:
Make a binary with installation.
Check the directory
cgiserver -h

Survol HTTP server:
cgiserver
    -p,--port=<number>      TCP/IP port number. Default is 8000
    -a,--address=<host>     IP address. Default value is local host name.
    -b,--browser=<program>  Starts a browser
    -v,--verbose            Verbose mode

cgiserver -b "C:\Program Files (x86)\Mozilla Firefox\firefox.exe"
cgiserver -b "C:\Program Files\Internet Explorer\iexplore.exe"
cgiserver -b webbrowser # Uses default browser.

========================================================================================================================
Adding favicon

https://realfavicongenerator.net

<link rel="apple-touch-icon" sizes="180x180" href="/apple-touch-icon.png">
<link rel="icon" type="image/png" sizes="32x32" href="/favicon-32x32.png">
<link rel="icon" type="image/png" sizes="16x16" href="/favicon-16x16.png">
<link rel="manifest" href="/manifest.json">
<link rel="mask-icon" href="/safari-pinned-tab.svg" color="#5bbad5">
<meta name="theme-color" content="#ffffff">

========================================================================================================================
Install on OVH.

Many Python modules are available in the ovh package: six, rdflib, psutil

~/survol is the GIT repository
~/www is the HTML root
~/cgi-bin contains the CVGI scripts.

##########
In ~/cgi-bin, a CGI script imports the survol Python package. It is not stored into CGI (But is very small).
Called with http://www.primhillcomputers.com/cgi-bin/survol.py
Same logic for http://www.primhillcomputers.com/cgi-bin/test.py

$ cat ~/cgi-bin/survol.py
#!/usr/bin/python

from survol import scripts
from survol.scripts import survolcgi

if __name__ == '__main__':
        survolcgi.SurvolCgi()

##########
In ~/cgi-bin, a symbolic link points to the survol repository, so it can be imported:
ls -l ~/survol/survol survol

A symbolic link so that ~/www points to the HTML pages in survol GIT repository:
ln -s ~/survol/survol/www/ www/ui

So the javascript entry point is:
http://www.primhillcomputers.com/ui/index.htm

##########
Surprisingly, it works... It should not, as following symbolic links in a cgi directory is not very safe.

http://www.primhillcomputers.com/cgi-bin/survol/print_environment_variables.py

